Script started on 2023-04-04 18:31:10-03:00 [TERM="xterm-256color" TTY="/dev/pts/4" COLUMNS="237" LINES="14"]
]0;bdlemos_@Bdlemos321: ~/Prog/Facul/Semestre_3/ED/AP3[01;32mbdlemos_@Bdlemos321[00m:[01;34m~/Prog/Facul/Semestre_3/ED/AP3[00m$ exitclearvalgrind --leak-check=full ./a.out [14Pgcc -g c10corrigido.c[1Pcorrigido.c1corrigido.c
]0;bdlemos_@Bdlemos321: ~/Prog/Facul/Semestre_3/ED/AP3[01;32mbdlemos_@Bdlemos321[00m:[01;34m~/Prog/Facul/Semestre_3/ED/AP3[00m$ gcc -g c11corrigido.cexit[Kclearvalgrind --leak-check=full ./a.out [14Pgcc -g c10corrigido.cvalgrind --leak-check=full ./a.out [23Pgdb[C[C[C[C[C[C[C[C[C
[35;1m[35;1mGNU gdb [m[35;1m(Ubuntu 9.2-0ubuntu1~20.04.1) [m[35;1m9.2[m[35;1m
[m[mCopyright (C) 2020 Free Software Foundation, Inc.
License GPLv3+: GNU GPL version 3 or later <http://gnu.org/licenses/gpl.html>
This is free software: you are free to change and redistribute it.
There is NO WARRANTY, to the extent permitted by law.
Type "show copying" and "show warranty" for details.
This GDB was configured as "x86_64-linux-gnu".
Type "show configuration" for configuration details.
For bug reporting instructions, please see:
<http://www.gnu.org/software/gdb/bugs/>.
Find the GDB manual and other documentation resources online at:
    <http://www.gnu.org/software/gdb/documentation/>.

[m--Type <RET> for more, q to quit, c to continue without paging--
For help, type "help".
Type "apropos word" to search for commands related to "word"...
Reading symbols from [32m./a.out[m...
(gdb) run
Starting program: /home/bdlemos_/Prog/Facul/Semestre_3/ED/AP3/a.out 
3736, Rolberton
[Inferior 1 (process 3736) exited normally]
(gdb) q
]0;bdlemos_@Bdlemos321: ~/Prog/Facul/Semestre_3/ED/AP3[01;32mbdlemos_@Bdlemos321[00m:[01;34m~/Prog/Facul/Semestre_3/ED/AP3[00m$ gdb ./a.out cc -g c11corrigido.cexit[Kclearvalgrind --leak-check=full ./a.out 
==3815== Memcheck, a memory error detector
==3815== Copyright (C) 2002-2017, and GNU GPL'd, by Julian Seward et al.
==3815== Using Valgrind-3.15.0 and LibVEX; rerun with -h for copyright info
==3815== Command: ./a.out
==3815== 
==3815== Invalid write of size 2
==3815==    at 0x1091B4: main (c11corrigido.c:9)
==3815==  Address 0x4a48048 is 0 bytes after a block of size 8 alloc'd
==3815==    at 0x483B7F3: malloc (in /usr/lib/x86_64-linux-gnu/valgrind/vgpreload_memcheck-amd64-linux.so)
==3815==    by 0x10919E: main (c11corrigido.c:8)
==3815== 
==3815== Invalid read of size 1
==3815==    at 0x483EF54: strlen (in /usr/lib/x86_64-linux-gnu/valgrind/vgpreload_memcheck-amd64-linux.so)
==3815==    by 0x48CBD14: __vfprintf_internal (vfprintf-internal.c:1688)
==3815==    by 0x48B4D3E: printf (printf.c:33)
==3815==    by 0x1091DF: main (c11corrigido.c:11)
==3815==  Address 0x4a48048 is 0 bytes after a block of size 8 alloc'd
==3815==    at 0x483B7F3: malloc (in /usr/lib/x86_64-linux-gnu/valgrind/vgpreload_memcheck-amd64-linux.so)
==3815==    by 0x10919E: main (c11corrigido.c:8)
==3815== 
==3815== Invalid read of size 1
==3815==    at 0x48E270C: _IO_new_file_xsputn (fileops.c:1219)
==3815==    by 0x48E270C: _IO_file_xsputn@@GLIBC_2.2.5 (fileops.c:1197)
==3815==    by 0x48CA0FB: __vfprintf_internal (vfprintf-internal.c:1688)
==3815==    by 0x48B4D3E: printf (printf.c:33)
==3815==    by 0x1091DF: main (c11corrigido.c:11)
==3815==  Address 0x4a48048 is 0 bytes after a block of size 8 alloc'd
==3815==    at 0x483B7F3: malloc (in /usr/lib/x86_64-linux-gnu/valgrind/vgpreload_memcheck-amd64-linux.so)
==3815==    by 0x10919E: main (c11corrigido.c:8)
==3815== 
==3815== Invalid read of size 1
==3815==    at 0x48436A0: mempcpy (in /usr/lib/x86_64-linux-gnu/valgrind/vgpreload_memcheck-amd64-linux.so)
==3815==    by 0x48E2631: _IO_new_file_xsputn (fileops.c:1236)
==3815==    by 0x48E2631: _IO_file_xsputn@@GLIBC_2.2.5 (fileops.c:1197)
==3815==    by 0x48CA0FB: __vfprintf_internal (vfprintf-internal.c:1688)
==3815==    by 0x48B4D3E: printf (printf.c:33)
==3815==    by 0x1091DF: main (c11corrigido.c:11)
==3815==  Address 0x4a48048 is 0 bytes after a block of size 8 alloc'd
==3815==    at 0x483B7F3: malloc (in /usr/lib/x86_64-linux-gnu/valgrind/vgpreload_memcheck-amd64-linux.so)
==3815==    by 0x10919E: main (c11corrigido.c:8)
==3815== 
3815, Rolberton
==3815== 
==3815== HEAP SUMMARY:
==3815==     in use at exit: 8 bytes in 1 blocks
==3815==   total heap usage: 2 allocs, 1 frees, 1,032 bytes allocated
==3815== 
==3815== 8 bytes in 1 blocks are definitely lost in loss record 1 of 1
==3815==    at 0x483B7F3: malloc (in /usr/lib/x86_64-linux-gnu/valgrind/vgpreload_memcheck-amd64-linux.so)
==3815==    by 0x10919E: main (c11corrigido.c:8)
==3815== 
==3815== LEAK SUMMARY:
==3815==    definitely lost: 8 bytes in 1 blocks
==3815==    indirectly lost: 0 bytes in 0 blocks
==3815==      possibly lost: 0 bytes in 0 blocks
==3815==    still reachable: 0 bytes in 0 blocks
==3815==         suppressed: 0 bytes in 0 blocks
==3815== 
==3815== For lists of detected and suppressed errors, rerun with: -s
==3815== ERROR SUMMARY: 7 errors from 5 contexts (suppressed: 0 from 0)
]0;bdlemos_@Bdlemos321: ~/Prog/Facul/Semestre_3/ED/AP3[01;32mbdlemos_@Bdlemos321[00m:[01;34m~/Prog/Facul/Semestre_3/ED/AP3[00m$ valgrind --leak-check=full ./a.out [23Pgdb[C[C[C[C[C[C[C[C[Ccc -g c11corrigido.c
]0;bdlemos_@Bdlemos321: ~/Prog/Facul/Semestre_3/ED/AP3[01;32mbdlemos_@Bdlemos321[00m:[01;34m~/Prog/Facul/Semestre_3/ED/AP3[00m$ gcc -g c11corrigido.cvalgrind --leak-check=full ./a.out 
==3875== Memcheck, a memory error detector
==3875== Copyright (C) 2002-2017, and GNU GPL'd, by Julian Seward et al.
==3875== Using Valgrind-3.15.0 and LibVEX; rerun with -h for copyright info
==3875== Command: ./a.out
==3875== 
3875, Rolberton
==3875== 
==3875== HEAP SUMMARY:
==3875==     in use at exit: 0 bytes in 0 blocks
==3875==   total heap usage: 2 allocs, 2 frees, 1,034 bytes allocated
==3875== 
==3875== All heap blocks were freed -- no leaks are possible
==3875== 
==3875== For lists of detected and suppressed errors, rerun with: -s
==3875== ERROR SUMMARY: 0 errors from 0 contexts (suppressed: 0 from 0)
]0;bdlemos_@Bdlemos321: ~/Prog/Facul/Semestre_3/ED/AP3[01;32mbdlemos_@Bdlemos321[00m:[01;34m~/Prog/Facul/Semestre_3/ED/AP3[00m$ eix[K[Kxit[K[K[K[Kvalgrind --leak-check=full ./a.out [14Pgcc -g c11corrigido.cvalgrind --leak-check=full ./a.out [23Pgdb[C[C[C[C[C[C[C[C[C
[35;1m[35;1mGNU gdb [m[35;1m(Ubuntu 9.2-0ubuntu1~20.04.1) [m[35;1m9.2[m[35;1m
[m[mCopyright (C) 2020 Free Software Foundation, Inc.
License GPLv3+: GNU GPL version 3 or later <http://gnu.org/licenses/gpl.html>
This is free software: you are free to change and redistribute it.
There is NO WARRANTY, to the extent permitted by law.
Type "show copying" and "show warranty" for details.
This GDB was configured as "x86_64-linux-gnu".
Type "show configuration" for configuration details.
For bug reporting instructions, please see:
<http://www.gnu.org/software/gdb/bugs/>.
Find the GDB manual and other documentation resources online at:
    <http://www.gnu.org/software/gdb/documentation/>.

[m--Type <RET> for more, q to quit, c to continue without paging--
For help, type "help".
Type "apropos word" to search for commands related to "word"...
Reading symbols from [32m./a.out[m...
(gdb) run
Starting program: /home/bdlemos_/Prog/Facul/Semestre_3/ED/AP3/a.out 
3939, Rolberton
[Inferior 1 (process 3939) exited normally]
(gdb) q
]0;bdlemos_@Bdlemos321: ~/Prog/Facul/Semestre_3/ED/AP3[01;32mbdlemos_@Bdlemos321[00m:[01;34m~/Prog/Facul/Semestre_3/ED/AP3[00m$ gdb ./a.out [23@valgrind --leak-check=full[C[C[C[C[C[C[C[C[C[14Pgcc -g c11corrigido.cvalgrind --leak-check=full ./a.out [23Pgdb[C[C[C[C[C[C[C[C[Ccc -g c11corrigido.cexit[Kclear[1Pexit
exit

Script done on 2023-04-04 18:33:34-03:00 [COMMAND_EXIT_CODE="0"]
