Parte 1) A memoria alocada estaticamente e o segundo loop acessa uma posiçao não incializada

Parte 2)
Script started on 2023-04-04 16:02:28-03:00 [TERM="xterm-256color" TTY="/dev/pts/6" COLUMNS="165" LINES="15"]
==10381== Memcheck, a memory error detector
==10381== Copyright (C) 2002-2017, and GNU GPL'd, by Julian Seward et al.
==10381== Using Valgrind-3.15.0 and LibVEX; rerun with -h for copyright info
==10381== Command: ./a.out
==10381== 
==10381== Conditional jump or move depends on uninitialised value(s)
==10381==    at 0x48CA958: __vfprintf_internal (vfprintf-internal.c:1687)
==10381==    by 0x48B4D3E: printf (printf.c:33)
==10381==    by 0x1091EE: main (c2.c:11)
==10381== 
==10381== Use of uninitialised value of size 8
==10381==    at 0x48AE69B: _itoa_word (_itoa.c:179)
==10381==    by 0x48CA574: __vfprintf_internal (vfprintf-internal.c:1687)
==10381==    by 0x48B4D3E: printf (printf.c:33)
==10381==    by 0x1091EE: main (c2.c:11)
==10381== 
==10381== Conditional jump or move depends on uninitialised value(s)
==10381==    at 0x48AE6AD: _itoa_word (_itoa.c:179)
==10381==    by 0x48CA574: __vfprintf_internal (vfprintf-internal.c:1687)
==10381==    by 0x48B4D3E: printf (printf.c:33)
==10381==    by 0x1091EE: main (c2.c:11)
==10381== 
==10381== Conditional jump or move depends on uninitialised value(s)
==10381==    at 0x48CB228: __vfprintf_internal (vfprintf-internal.c:1687)
==10381==    by 0x48B4D3E: printf (printf.c:33)
==10381==    by 0x1091EE: main (c2.c:11)
==10381== 
==10381== Conditional jump or move depends on uninitialised value(s)
==10381==    at 0x48CA6EE: __vfprintf_internal (vfprintf-internal.c:1687)
==10381==    by 0x48B4D3E: printf (printf.c:33)
==10381==    by 0x1091EE: main (c2.c:11)
==10381== 
0 1 2 3 4 5 6 7 8 31 
==10381== 
==10381== HEAP SUMMARY:
==10381==     in use at exit: 0 bytes in 0 blocks
==10381==   total heap usage: 1 allocs, 1 frees, 1,024 bytes allocated
==10381== 
==10381== All heap blocks were freed -- no leaks are possible
==10381== 
==10381== Use --track-origins=yes to see where uninitialised values come from
==10381== For lists of detected and suppressed errors, rerun with: -s
==10381== ERROR SUMMARY: 7 errors from 5 contexts (suppressed: 0 from 0)

Parte 3) ALoquei dinamicamente e aumentei a condiçao de parada do primeiro for de 9 para 10.

Parte 4)
==10437== Copyright (C) 2002-2017, and GNU GPL'd, by Julian Seward et al.
==10437== Using Valgrind-3.15.0 and LibVEX; rerun with -h for copyright info
==10437== Command: ./a.out
==10437== 
0 1 2 3 4 5 6 7 8 9 
==10437== 
==10437== HEAP SUMMARY:
==10437==     in use at exit: 0 bytes in 0 blocks
==10437==   total heap usage: 2 allocs, 2 frees, 1,064 bytes allocated
==10437== 
==10437== All heap blocks were freed -- no leaks are possible
==10437== 
==10437== For lists of detected and suppressed errors, rerun with: -s
==10437== ERROR SUMMARY: 0 errors from 0 contexts (suppressed: 0 from 0)

Script done on 2023-04-04 16:02:51-03:00 [COMMAND_EXIT_CODE="0"]
